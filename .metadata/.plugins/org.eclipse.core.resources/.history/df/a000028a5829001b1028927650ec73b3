package com.example.controller;

import java.io.File;
import java.nio.file.Files;
import java.util.UUID;

import javax.annotation.Resource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.util.FileCopyUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.example.domain.Criteria;
import com.example.domain.PageMaker;
import com.example.domain.ProductVO;
import com.example.mapper.ProductMapper;
import com.example.service.ProductService;

@Controller
public class ProductController {
	@Autowired
	ProductMapper mapper;
	
	@Autowired
	ProductService service;
	
	@RequestMapping("/insert")
	public void insert(){
		
	}
	
	@RequestMapping("/list")
	public void list(Criteria cri , Model model){
		if(cri.getPerPageNum()==10){
			cri.setPerPageNum(4);
		}
		PageMaker pm = new PageMaker();
		pm.setCri(cri);
		pm.setTotalCount(mapper.totalCount(cri));
		model.addAttribute("pm", pm);
		model.addAttribute("list", mapper.list(cri));
	}
	
	@Resource(name="uploadPath")
	String path;
	
	@RequestMapping(value="insert", method=RequestMethod.POST)
	public String insertPost(ProductVO vo, MultipartFile file)throws Exception{
		if(!file.isEmpty()){
		UUID uid=UUID.randomUUID(); //랜덤으로 파일이름을 중복되지않게 만들어준다
	     String savedName=uid.toString()+"_"+file.getOriginalFilename();//새로만든 파일이름을 저장시켜줌
	     System.out.println("파일명"+savedName);
	      
	     File target =new File(path,savedName);
	     FileCopyUtils.copy(file.getBytes(), target); //파일저장
	     vo.setImage(savedName);
		}
	     mapper.insert(vo);
	     
	     return "redirect:list";
		
	}
	
	//이미지 출력
	@RequestMapping("display")  //display?fileName=긴파일이름
	@ResponseBody
	public ResponseEntity<byte[]> display(String fileName)throws Exception{
	    ResponseEntity<byte[]> result=null;
	    //display fileName이 있는 경우
	    if(!fileName.equals("")) {
	        File file=new File(path + File.separator + fileName);
	        HttpHeaders header=new HttpHeaders();
	        header.add("Content-Type", Files.probeContentType(file.toPath()));
	        result=new ResponseEntity<>(FileCopyUtils.copyToByteArray(file), header, HttpStatus.OK);
	    }
	    return result;
	}
}
